# This file is a template, and might need editing before it works on your project.
# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/ee/development/cicd/templates.html
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Python.gitlab-ci.yml

# Change pip's cache directory to be inside the project directory since we can
# only cache local items.
variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"

# Pip's cache doesn't store the python packages
# https://pip.pypa.io/en/stable/topics/caching/
#
# If you want to also cache the installed packages, you have to install
# them in a virtualenv and cache it as well.
cache:
  paths:
    - .cache/pip
    - venv/
    - public

# Install package for all jobs (unless inherit is false)
default:
  # Official language image. Look for the different tagged releases at:
  # https://hub.docker.com/r/library/python/tags/
  image: python:3.10  # pybedtools is not compatible with python 3.11
  before_script:
    - python --version  # For debugging
    - uname -a          # For debugging
    - cat /etc/os-release    # For debugging
    - gcc --version
    - pip install virtualenv
    - virtualenv venv
    - source venv/bin/activate
    - apt update
    - apt -y install r-base  # needed for rpy2 install
    - pip install rpy2   # resolve dependencies for diffexpr
    - pip install numpy  # resolve dependencies for diffexpr
    - pip install pandas # resolve dependencies for diffexpr
    - pip install .[all]

# This is a a rule that always passes for branches without jobs being run - otherwise some branches cannot be merged
pass:
  inherit:
    default: 
      - image
  script:
     - 'echo passed'
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event" # all MR

# flake8 ignore rules:
# E501 = Line too long
# W503 = Line break occurred before a binary operator
lint:
  inherit:
    default: 
      - image  # package not needed to run linting
  stage: test
  tags:
    - coverage
  script:
    - pip install flake8
    - flake8 sctoolbox setup.py tests --ignore=E501,W503 --extend-exclude=sctoolbox/__init__.py,sctoolbox/data,tests/data
  allow_failure: false
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event" # all MR
      changes:
      - setup.py
      - tests/*.py
      - sctoolbox/*.py

# Run test coverage
test coverage:
  stage: test
  tags:
    - coverage
  coverage: '/TOTAL.*\s(\d*.\d*\%)/'
  script:
    - apt-get install bedtools  #needed for some tests
    - chmod +x scripts/bedGraphToBigWig  # make script executable
    - pip install pytest
    - pip install pytest-cov
    - pip install pytest-html
    - pytest --cov-report=term --cov=./sctoolbox . --junitxml=pytest.xml --cov-report html:htmlcov --html=pytest.html
  artifacts:
    when: always
    paths:
      - pytest.xml
      - pytest.html
      - htmlcov
    reports:
      junit: pytest.xml
  rules:
    - if: $CI_COMMIT_BRANCH == "dev" || $CI_PIPELINE_SOURCE == "merge_request_event"   # all MR or commits to dev
      changes:
      - tests/*.py
      - sctoolbox/*.py
    - when: manual  
      allow_failure: True

# test if notebooks contain output; these should be removed using the .gitconfig addition given in the README
notebook-output-check:
  inherit:
    default: 
      - image
  stage: test
  script:
    - python --version
    - python scripts/check_notebooks.py */*.ipynb
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event" # all MR

# Test notebooks when code is pushed to main
notebooks:
  image: continuumio/miniconda3:latest
  inherit:
    default: false
  stage: test
  tags:
    - gwdg
    - gwdg-shared
  script:
    - conda install -c conda-forge mamba
    - mamba env create -f sctoolbox_env.yml --force #mamba is faster at creating envs than conda
    - conda init bash
    - source ~/.bashrc
    - conda activate sctoolbox
    - pip install papermill
    - python -m ipykernel install --user --name sctoolbox
    - bash scripts/run_notebooks.sh
  rules:
    - if: $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "main" # only on MR to main
      when: always
    - if: $CI_MERGE_REQUEST_TARGET_BRANCH_NAME != "main" # for all other pushes, you can manually trigger the notebooks
      when: manual
      allow_failure: True  # the manual rule is allowed to fail


# ----------------------------- Gitlab pages ---------------------------------#

# Build documentation
build-pages:
  stage: deploy
  script:
    - apt-get update -qq && apt-get install -qq -y pandoc
    - pip install sphinx sphinx-rtd-theme
    - pip install nbsphinx
    - pip install nbsphinx_link
    - cd docs
    - make html
  artifacts:
    paths:
      - docs/build/html/
  rules:
    - if: $CI_COMMIT_BRANCH == "dev"  # always for commits to dev
    - if: $CI_MERGE_REQUEST_SOURCE_BRANCH_NAME == "dev"
      when: never   # but not for any merge requests coming from dev
    - when: manual  # otherwise manual

  #rules:  # if manual or commit to dev
  #  - if: $CI_COMMIT_BRANCH == "dev" # after accepted MR to dev
  #   allow_failure: False  # dev not allowed to fail
  # - when: manual
  #   allow_failure: True

# Deploy pages for a MR
deploy-pages-MR:
  stage: deploy
  needs: ["build-pages"]
  environment:
    name: pages/$CI_MERGE_REQUEST_SOURCE_BRANCH_NAME
    url: "https://loosolab.pages.gwdg.de/-/software/sc_framework/-/jobs/$CI_JOB_ID/artifacts/docs/build/html/index.html"
  script: 
    - echo "deploy"
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event" && $CI_MERGE_REQUEST_SOURCE_BRANCH_NAME != "dev" #all MRs but dev can be triggered manually
      #when: manual

# Deploy pages for a commit without a MR
deploy-pages-commit:
  stage: deploy
  needs: ["build-pages"]
  environment:
    name: pages/$CI_COMMIT_BRANCH
    url: "https://loosolab.pages.gwdg.de/-/software/sc_framework/-/jobs/$CI_JOB_ID/artifacts/docs/build/html/index.html"
  script: 
    - echo "deploy" #mv docs/build/html/ public/
  rules:
    - if: $CI_PIPELINE_SOURCE != "merge_request_event" && $CI_COMMIT_BRANCH != "dev"  # commits without MR can be triggered manually
      #when: manual

# Deploy documentation to public if it was the dev branch
deploy-pages-main:
  stage: deploy
  needs: ["build-pages"]
  script:
    - ls -l
    - ls -l docs/
    - mv -f docs/build/html/ public/
  artifacts:
    paths:
      - public
  rules:
    - if: $CI_COMMIT_BRANCH == "dev" # after accepted MR to dev
      allow_failure: False  # dev not allowed to fail
