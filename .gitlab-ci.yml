# This file is a template, and might need editing before it works on your project.
# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/ee/development/cicd/templates.html
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Python.gitlab-ci.yml

# Official language image. Look for the different tagged releases at:
# https://hub.docker.com/r/library/python/tags/
image: python:latest  #pin due to numba not available for python 3.11

# Change pip's cache directory to be inside the project directory since we can
# only cache local items.
variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"

# Pip's cache doesn't store the python packages
# https://pip.pypa.io/en/stable/topics/caching/
#
# If you want to also cache the installed packages, you have to install
# them in a virtualenv and cache it as well.
cache:
  paths:
    - .cache/pip
    - venv/

default:
  before_script:
    - python --version  # For debugging
    - pip install virtualenv
    - virtualenv venv
    - source venv/bin/activate
    - apt update
<<<<<<< HEAD
    - apt -y install r-base
    - apt install software-properties-common  # for gcc
    - add-apt-repository universe  # for gcc
    - apt update                   # for gcc
    - apt -y install gcc-8 g++-8  # fixes issue when installing mnnpy due to compiling error; this version is recommended in the mnnpy README
    - pip install .[all]
    - pip install pytest
    - pip install pytest-cov
=======
    - apt -y install r-base  # needed for rpy2 install
>>>>>>> dev

# flake8 ignore rules:
# E501 = Line too long
# W503 = Line break occurred before a binary operator

#this is a a rule that always passes for branches without jobs being run - otherwise some branches cannot be merged
pass:
  inherit:
    default: false
  script:
     - 'echo passed'
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event" # all MR

lint:
  stage: test
  tags:
    - coverage
  script:
    - pip install flake8
    - flake8 sctoolbox setup.py tests --ignore=E501,W503 --extend-exclude=sctoolbox/data,tests/data
  allow_failure: false
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event" # all MR
      changes:
      - setup.py
      - tests/*.py
      - sctoolbox/*.py

test coverage:
  stage: test
  tags:
    - coverage
  coverage: '/TOTAL.*\s(\d*.\d*\%)/'
  script:
    - pip install pytest
    - pip install pytest-cov
    - pip install pytest-html
    - pip install rpy2   # resolve dependencies for diffexpr
    - pip install numpy  # resolve dependencies for diffexpr
    - pip install pandas # resolve dependencies for diffexpr
    - pip install .[all]
    - pytest --cov-report=term --cov=./sctoolbox . --junitxml=pytest.xml --cov-report html:htmlcov --html=pytest.html
  artifacts:
    when: always
    paths:
      - pytest.xml
      - pytest.html
      - htmlcov
    reports:
      junit: pytest.xml
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event" # all MR
      changes:
      - tests/*.py
      - sctoolbox/*.py
    - if: $CI_COMMIT_BRANCH == "dev" # all commits to dev; used for getting coverage

# test if notebooks contain output; these should be removed using the .gitconfig addition given in the README
notebook-output-check:
  image: python:3.9.15
  inherit:
    default: false
  stage: test
  script:
    - python --version
    - python scripts/check_notebooks.py */*.ipynb
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event" # all MR

pages:
  stage: deploy
  tags:
    - coverage
  script:
    - pip install rpy2   # resolve dependencies for diffexpr
    - pip install numpy  # resolve dependencies for diffexpr
    - pip install pandas # resolve dependencies for diffexpr
    - pip install .[all]
    - apt-get update -qq && apt-get install -qq -y pandoc
    - pip install sphinx sphinx-rtd-theme
    - pip install nbsphinx
    - pip install nbsphinx_link
    - cd docs
    - make html
    - mv build/html/ ../public/
  artifacts:
    paths:
      - public
  rules:
    - if: $CI_COMMIT_BRANCH == "dev" # after accepted MR to dev

#Test notebooks when code is pushed to main
notebooks:
  stage: deploy
  image: continuumio/miniconda3:latest
  tags:
    - gwdg
    - gwdg-shared
  inherit:
    default: false  #do not install virtual env for this job
  script:
    - pip install papermill
    - conda install -c conda-forge mamba
    - mamba env create -f sctoolbox_env.yml --force #mamba is faster at creating envs than conda
    - conda init bash
    - source ~/.bashrc
    - conda activate sctoolbox
    - python -m ipykernel install --user --name sctoolbox
    - bash scripts/run_notebooks.sh
  rules:
    - if: $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "main" # only on MR to main
      when: always
    - if: $CI_MERGE_REQUEST_TARGET_BRANCH_NAME != "main" # for all other pushes, you can manually trigger the notebooks
      when: manual
      allow_failure: True  # the manual rule is allowed to fail
