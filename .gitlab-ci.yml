# This file is a template, and might need editing before it works on your project.
# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/ee/development/cicd/templates.html
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Python.gitlab-ci.yml

# Official language image. Look for the different tagged releases at:
# https://hub.docker.com/r/library/python/tags/
image: python:3.9.15  #pin due to numba not available for python 3.11

# Change pip's cache directory to be inside the project directory since we can
# only cache local items.
variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"

# Pip's cache doesn't store the python packages
# https://pip.pypa.io/en/stable/topics/caching/
#
# If you want to also cache the installed packages, you have to install
# them in a virtualenv and cache it as well.
cache:
  paths:
    - .cache/pip
    - venv/

before_script:
  - python --version  # For debugging
  - pip install virtualenv
  - virtualenv venv
  - source venv/bin/activate
  - apt update
  - apt -y install r-base
  - pip install .[all]
  - pip install pytest
  - pip install pytest-cov

# flake8 ignore rules:
# E501 = Line too long
# W503 = Line break occurred before a binary operator

lint:
  script:
    - pip install flake8
    - flake8 sctoolbox setup.py tests --ignore=E501,W503 --extend-exclude=sctoolbox/data,tests/data
  allow_failure: false

cov:
  coverage: '/TOTAL.*\s(\d*.\d*\%)/'
  script:
    - pytest --cov-report=term --cov=./sctoolbox . --junitxml=pytest.xml    
  artifacts:
    when: always
    paths:
      - pytest.xml
    reports:
      junit: pytest.xml
  rules:
    - if: $CI_COMMIT_BRANCH == "dev"

pages:
  script:
    - apt-get update -qq && apt-get install -qq -y pandoc
    - pip install sphinx sphinx-rtd-theme
    - pip install nbsphinx
    - pip install nbsphinx_link 
    - cd docs
    - make html
    - mv build/html/ ../public/
  artifacts:
    paths:
      - public
  rules:
    - if: $CI_COMMIT_BRANCH == "dev"

#Test notebooks when code is pushed to main
notebooks:
  script:
    - bash scripts/run_notebooks.sh
  rules:
    - if: $CI_COMMIT_BRANCH == "main"

#test:
#  script:
#    - python setup.py test
#    - pip install tox flake8  # you can also use tox
#    - tox -e py36,flake8

#run:
#  script:
#    - python setup.py bdist_wheel
#    # an alternative approach is to install and run:
#    - pip install dist/*
#    # run the command here
#  artifacts:
#    paths:
#      - dist/*.whl
